import numpy as np
def gen_mesh(points=None):
    from meshpy import MeshInfo
    points = [(-1, 1, 3), (1, 1, 3), (1, -1, 3), (-1, -1, 3)]

    camera_origin = (0, 0, 0)
    far = (0, 0, 4)

    p = [camera_origin, far]
    facets = []
    for i in np.arange(len(points)):
        p1 = points[i]
        p.append(p1)
        try:
            p2 = points[i + 1]
        except IndexError:
            break

        facets.append([0, 1, len(p) - 1, len(p)])

    facets.append([0, 1, 5, 2])
    mesh_points = p
    mesh_facets = facets

    print(mesh_points)
    print(mesh_facets)

    mesh_info = MeshInfo()
    mesh_info.set_points(mesh_points)
    mesh_info.set_facets(mesh_facets)

    mesh_info.set_points([
        (-5, 0, 0),
        (2, 0, 0),
        (2, 2, 0),
        (0, 2, 0),
        (0, 0, 12),
        (2, 2, 12),
        (2, 2, 12),
        (0, 2, 12),
    ])
    mesh_info.set_facets([
        [0, 1, 2, 3],
        [4, 5, 6, 7],
        [0, 4, 5, 1],
        [1, 5, 6, 2],
        [2, 6, 7, 3],
        [3, 7, 4, 0],
    ])
    mesh = build(mesh_info)

    print("Mesh Points:")
    for i, p in enumerate(mesh.points):
        print(i, p)
    print("Point numbers in tetrahedra:")
    for i, t in enumerate(mesh.elements):
        print(i, t)

    mesh.write_vtk("test.vtk")
    import pyvista as pv
    grid = pv.read('test.vtk')
    grid.plot(show_scalar_bar=False, show_axes=False)


def trimesh(camera_origin=None, contour_points=None):
    """
    Function to generate mesh points and triangles from camera origin and contour points
    """

    from mpl_toolkits.mplot3d import Axes3D
    import matplotlib.pyplot as plt
    import numpy as np

    example_points = [(-1, 1, 3), (1, 1, 3), (1, -1, 3), (-1, -1, 3)]
    example_points = example_points = [(711, 854), (701, 855), (691, 857), (681, 858), (671, 860), (661, 861),
                                       (651, 862), (641, 864), (631, 865), (621, 867), (611, 869), (601, 872),
                                       (591, 875), (581, 878), (571, 881), (561, 883), (551, 886), (541, 889),
                                       (531, 894), (521, 899), (511, 904), (501, 908), (491, 913), (481, 918),
                                       (471, 924), (461, 929), (451, 934), (441, 940), (431, 947), (421, 955),
                                       (411, 963), (401, 970), (391, 979), (381, 988), (371, 997), (361, 1007),
                                       (351, 1017), (342, 1027), (334, 1037), (326, 1047), (318, 1057), (311, 1067),
                                       (304, 1077), (297, 1087), (291, 1097), (284, 1107), (279, 1117), (273, 1127),
                                       (268, 1137), (263, 1147), (258, 1157), (254, 1167), (249, 1177), (245, 1187),
                                       (241, 1197), (237, 1207), (234, 1217), (230, 1227), (228, 1237), (225, 1247),
                                       (223, 1257), (220, 1267), (218, 1277), (215, 1287), (213, 1297), (211, 1307),
                                       (210, 1317), (209, 1327), (210, 1337), (210, 1347), (209, 1357), (208, 1367),
                                       (207, 1377), (207, 1387), (207, 1397), (207, 1407), (207, 1417), (208, 1427),
                                       (210, 1437), (211, 1447), (212, 1457), (214, 1467), (215, 1477), (217, 1487),
                                       (219, 1497), (222, 1507), (224, 1517), (226, 1527), (229, 1537), (232, 1547),
                                       (235, 1557), (237, 1567), (241, 1577), (244, 1587), (248, 1597), (253, 1607),
                                       (257, 1617), (262, 1627), (267, 1637), (272, 1647), (277, 1657), (283, 1667),
                                       (288, 1677), (294, 1687), (300, 1697), (307, 1707), (313, 1717), (320, 1727),
                                       (327, 1737), (334, 1747), (342, 1757), (350, 1767), (359, 1777), (368, 1787),
                                       (378, 1797), (388, 1807), (398, 1816), (408, 1826), (418, 1835), (428, 1843),
                                       (438, 1851), (448, 1859), (458, 1867), (468, 1874), (478, 1882), (488, 1889),
                                       (498, 1896), (508, 1903), (518, 1909), (528, 1916), (538, 1922), (548, 1927),
                                       (558, 1932), (568, 1938), (578, 1942), (588, 1947), (598, 1952), (608, 1956),
                                       (618, 1960), (628, 1964), (638, 1967), (648, 1971), (658, 1974), (668, 1976),
                                       (678, 1979), (688, 1982), (698, 1984), (708, 1987), (718, 1989), (728, 1991),
                                       (738, 1993), (748, 1995), (758, 1997), (768, 1999), (778, 2001), (788, 2002),
                                       (798, 2004), (808, 2006), (818, 2008), (828, 2010), (838, 2013), (848, 2015),
                                       (858, 2018), (868, 2020), (878, 2023), (888, 2026), (898, 2029), (908, 2032),
                                       (918, 2036), (928, 2039), (938, 2044), (948, 2048), (958, 2053), (968, 2058),
                                       (978, 2063), (988, 2068), (998, 2073), (1008, 2079), (1018, 2085), (1028, 2091),
                                       (1038, 2098), (1048, 2104), (1058, 2110), (1068, 2115), (1078, 2120),
                                       (1088, 2123), (1098, 2124), (1108, 2123), (1118, 2121), (1128, 2115),
                                       (1137, 2106), (1142, 2096), (1143, 2086), (1142, 2076), (1139, 2066),
                                       (1135, 2056), (1131, 2046), (1127, 2036), (1122, 2026), (1117, 2016),
                                       (1112, 2006), (1106, 1996), (1100, 1986), (1094, 1976), (1088, 1966),
                                       (1080, 1956), (1073, 1946), (1065, 1936), (1056, 1926), (1046, 1916),
                                       (1037, 1906), (1027, 1896), (1017, 1886), (1008, 1876), (998, 1866), (989, 1856),
                                       (979, 1846), (969, 1836), (959, 1826), (949, 1817), (939, 1808), (929, 1800),
                                       (919, 1791), (909, 1784), (899, 1776), (889, 1769), (879, 1763), (869, 1756),
                                       (859, 1750), (849, 1743), (839, 1737), (829, 1731), (819, 1725), (809, 1719),
                                       (799, 1714), (789, 1708), (779, 1703), (769, 1698), (759, 1692), (749, 1687),
                                       (739, 1681), (729, 1675), (719, 1668), (709, 1660), (699, 1651), (689, 1642),
                                       (680, 1632), (671, 1622), (663, 1612), (656, 1602), (649, 1592), (642, 1582),
                                       (636, 1572), (631, 1562), (626, 1552), (621, 1542), (616, 1532), (611, 1522),
                                       (607, 1512), (603, 1502), (599, 1492), (596, 1482), (594, 1472), (592, 1462),
                                       (590, 1452), (589, 1442), (589, 1432), (590, 1422), (591, 1412), (593, 1402),
                                       (596, 1392), (599, 1382), (602, 1372), (605, 1362), (610, 1352), (616, 1342),
                                       (624, 1332), (633, 1322), (642, 1312), (652, 1303), (662, 1295), (672, 1288),
                                       (682, 1283), (692, 1278), (702, 1274), (712, 1272), (722, 1271), (732, 1270),
                                       (742, 1269), (752, 1268), (762, 1267), (772, 1267), (782, 1269), (792, 1269),
                                       (802, 1270), (812, 1271), (822, 1272), (832, 1274), (842, 1277), (852, 1280),
                                       (862, 1281), (872, 1283), (882, 1288), (892, 1293), (902, 1296), (912, 1300),
                                       (922, 1304), (932, 1310), (942, 1318), (952, 1326), (962, 1334), (972, 1342),
                                       (982, 1352), (989, 1362), (996, 1372), (1003, 1382), (1012, 1392), (1022, 1402),
                                       (1031, 1411), (1040, 1421), (1047, 1431), (1053, 1441), (1058, 1451),
                                       (1067, 1461), (1076, 1471), (1086, 1481), (1094, 1491), (1101, 1501),
                                       (1109, 1511), (1117, 1521), (1126, 1531), (1135, 1541), (1145, 1551),
                                       (1155, 1561), (1165, 1570), (1175, 1579), (1185, 1588), (1195, 1596),
                                       (1205, 1604), (1215, 1612), (1225, 1619), (1235, 1627), (1245, 1634),
                                       (1255, 1640), (1265, 1647), (1275, 1653), (1285, 1659), (1295, 1664),
                                       (1305, 1670), (1315, 1676), (1325, 1681), (1335, 1687), (1345, 1691),
                                       (1355, 1696), (1365, 1701), (1375, 1705), (1385, 1709), (1395, 1713),
                                       (1405, 1716), (1415, 1720), (1425, 1724), (1435, 1729), (1445, 1732),
                                       (1455, 1731), (1465, 1725), (1475, 1719), (1485, 1714), (1495, 1713),
                                       (1505, 1716), (1515, 1721), (1525, 1726), (1534, 1735), (1538, 1745),
                                       (1540, 1755), (1542, 1765), (1544, 1775), (1547, 1785), (1550, 1795),
                                       (1554, 1805), (1559, 1815), (1565, 1825), (1573, 1835), (1583, 1844),
                                       (1593, 1850), (1603, 1854), (1613, 1856), (1623, 1859), (1633, 1860),
                                       (1643, 1860), (1653, 1859), (1663, 1856), (1673, 1850), (1683, 1843),
                                       (1693, 1835), (1702, 1825), (1710, 1815), (1717, 1805), (1723, 1795),
                                       (1729, 1785), (1735, 1775), (1740, 1765), (1745, 1755), (1749, 1745),
                                       (1753, 1735), (1756, 1725), (1760, 1715), (1763, 1705), (1767, 1695),
                                       (1772, 1685), (1781, 1675), (1791, 1666), (1800, 1656), (1808, 1646),
                                       (1814, 1636), (1818, 1626), (1821, 1616), (1823, 1606), (1824, 1596),
                                       (1824, 1586), (1823, 1576), (1820, 1566), (1816, 1556), (1810, 1546),
                                       (1802, 1536), (1795, 1526), (1793, 1516), (1793, 1506), (1793, 1496),
                                       (1792, 1486), (1792, 1476), (1791, 1466), (1790, 1456), (1789, 1446),
                                       (1788, 1436), (1786, 1426), (1784, 1416), (1782, 1406), (1780, 1396),
                                       (1777, 1386), (1775, 1376), (1771, 1366), (1767, 1356), (1762, 1346),
                                       (1756, 1336), (1748, 1326), (1738, 1316), (1728, 1310), (1718, 1306),
                                       (1708, 1304), (1698, 1302), (1688, 1302), (1678, 1303), (1668, 1305),
                                       (1658, 1308), (1648, 1314), (1638, 1321), (1628, 1331), (1619, 1341),
                                       (1611, 1351), (1605, 1361), (1599, 1371), (1593, 1381), (1588, 1391),
                                       (1583, 1401), (1576, 1411), (1566, 1417), (1556, 1418), (1546, 1411),
                                       (1539, 1401), (1534, 1391), (1527, 1381), (1517, 1372), (1507, 1367),
                                       (1497, 1364), (1487, 1359), (1477, 1354), (1467, 1348), (1457, 1343),
                                       (1447, 1336), (1437, 1329), (1427, 1321), (1417, 1312), (1407, 1302),
                                       (1397, 1292), (1388, 1282), (1380, 1272), (1372, 1262), (1364, 1252),
                                       (1356, 1242), (1348, 1232), (1340, 1222), (1331, 1212), (1323, 1202),
                                       (1315, 1192), (1306, 1182), (1297, 1172), (1288, 1162), (1280, 1152),
                                       (1271, 1142), (1262, 1132), (1253, 1122), (1244, 1112), (1235, 1102),
                                       (1226, 1092), (1217, 1082), (1208, 1072), (1198, 1062), (1188, 1052),
                                       (1178, 1043), (1168, 1034), (1158, 1025), (1148, 1016), (1138, 1008),
                                       (1128, 999), (1118, 992), (1108, 984), (1098, 977), (1088, 970), (1078, 963),
                                       (1068, 956), (1058, 949), (1048, 943), (1038, 938), (1028, 932), (1018, 927),
                                       (1008, 921), (998, 916), (988, 912), (978, 907), (968, 903), (958, 900),
                                       (948, 896), (938, 892), (928, 889), (918, 886), (908, 883), (898, 880),
                                       (888, 877), (878, 875), (868, 873), (858, 871), (848, 869), (838, 867),
                                       (828, 865), (818, 863), (808, 861), (798, 860), (788, 858), (778, 857),
                                       (768, 856), (758, 855), (748, 854), (738, 854), (728, 854), (718, 854)]
    points = [[i[0], i[1], 3] for i in example_points]

    # plt.scatter(*zip(*example_points))
    # plt.show()

    camera_origin = (0, 0, 0)

    p = [camera_origin]
    triangles = []
    for i in np.arange(len(points)):
        p1 = points[i]
        p.append(p1)
        try:
            p2 = points[i + 1]
        except IndexError:
            break

        triangles.append([0, len(p) - 1, len(p)])
    triangles.append([0, 1, len(p) - 1])

    vertices = np.array(p)
    triangles = np.array(triangles)
    print(vertices)
    print(triangles)

    fig = plt.figure()
    ax = fig.add_subplot(projection='3d')
    ax.plot_trisurf(vertices[:, 0],
                    vertices[:, 1],
                    vertices[:, 2],
                    triangles=triangles,
                    edgecolor=[[0, 0, 0]],
                    linewidth=.1,
                    alpha=0.5,
                    shade=True)

    plt.show()


def stl():
    from numpy.stl import mesh
    from mpl_toolkits import mplot3d
    from matplotlib import pyplot
    from mpl_toolkits.mplot3d.art3d import Poly3DCollection

    m = mesh.Mesh.from_file('Teapot.stl')

    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    ax.add_collection3d(Poly3DCollection(m.vectors, facecolors='gray', linewidths=2))

    scale = m.points.flatten()
    ax.auto_scale_xyz(scale, scale, scale)

    pyplot.show()


def main():
    stl()


main()
